- name: Install dependencies
  become: true
  ansible.builtin.package:
    state: present
    name:
      - apt-transport-https
      - curl
      - gpg
      - wget

- name: Download ZeroTier install script
  ansible.builtin.get_url:
    url: https://install.zerotier.com
    dest: "{{ playbook_dir }}/zerotier-install.sh"
    mode: '0764'

- name: Download Brave Browser install script
  ansible.builtin.get_url:
    url: https://dl.brave.com/install.sh
    dest: "{{ playbook_dir }}/brave-install.sh"
    mode: '0764'

- name: Download docker install script
  ansible.builtin.get_url:
    url: https://get.docker.com
    dest: "{{ playbook_dir }}/docker-install.sh"
    mode: '0764'

- name: Download nvm install script
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh
    dest: "{{ playbook_dir }}/nvm-install.sh"
    mode: '0764'

- name: Run ZeroTier install script
  become: true
  ansible.builtin.script:
    cmd: "{{ playbook_dir }}/zerotier-install.sh"
  args:
    creates: "/usr/sbin/zerotier-cli"

- name: Run docker install script
  become: true
  ansible.builtin.script:
    cmd: "{{ playbook_dir }}/docker-install.sh"
  args:
    creates: "/usr/bin/docker"

- name: Run Brave Browser install script
  become: true
  ansible.builtin.script:
    cmd: "{{ playbook_dir }}/brave-install.sh"
  args:
    creates: "/usr/bin/brave-browser"

- name: Run nvm install script
  ansible.builtin.script:
    cmd: "{{ playbook_dir }}/nvm-install.sh"
  args:
    creates: "{{ ansible_facts['env']['HOME'] }}/.nvm"

- name: Install apt packages
  become: true
  ansible.builtin.package:
    state: present
    name:
      - ark
      - arp-scan
      - brave-browser
      - btop
      - build-essential
      - cmake
      - code
      - containerd.io
      - dfu-util
      - docker-ce
      - docker-ce-cli
      - docker-buildx-plugin
      - docker-compose-plugin
      - entr
      - gimp
      - gnome-shell-extension-manager
      - gparted
      - htop
      - inkscape
      - kdenlive
      - keepassxc
      - kernelstub
      - lutris
      - nala
      - neofetch
      - nmap
      - nodejs
      - nvtop
      - obs-studio
      - okular
      - pip
      - powertop
      - remmina
      - steam
      - timeshift
      - tldr
      - tmux
      - virt-manager
      - vlc
      - xournalpp

- name: Install Huion HS64 drivers
  become: true
  ansible.builtin.package:
    state: present
    deb:
      "https://driverdl.huion.com/driver/Linux/HuionTablet_LinuxDriver_v15.0.0.162.x86_64.deb"

- name: Install GitKraken
  become: true
  ansible.builtin.package:
    state: present
    deb:
      "https://release.gitkraken.com/linux/gitkraken-amd64.deb"

- name: Install VSCode
  become: true
  ansible.builtin.package:
    state: present
    deb: "https://vscode.download.prss.microsoft.com/dbazure/download/stable/cb0c47c0cfaad0757385834bd89d410c78a856c0/code_1.102.0-1752099874_amd64.deb"

- name: Install Vesktop flatpak
  community.general.flatpak:
    method: user
    state: present
    name: dev.vencord.Vesktop

- name: Install MMEX flatpak
  community.general.flatpak:
    method: user
    state: present
    name: org.moneymanagerex.MMEX

- name: Install Prism Launcher flatpak
  community.general.flatpak:
    method: user
    state: present
    name: org.prismlauncher.PrismLauncher

- name: Install pip packages
  ansible.builtin.pip:
    state: present
    name:
      - pyautogui

- name: Check the number of nala sources
  ansible.builtin.shell: |
    set -o pipefail
    cat /etc/apt/sources.list.d/nala-sources.list | grep -c "deb"
  register: nala_sources
  changed_when: false # Never reports as changed
  args:
    # Only runs when the nala sources file exists
    removes: /etc/apt/sources.list.d/nala-sources.list
    executable: /usr/bin/bash

- name: Run nala fetch
  ansible.builtin.shell:
    cmd: echo "y" | sudo nala fetch --auto --fetches 16
  when: nala_sources.stdout | int < 16

- name: Update all apt packages
  become: true
  ansible.builtin.apt:
    name: "*"
    state: latest
