#######################################
#      Setting custom wallpapers      #
#######################################

- name: Copy wallpaper images
  ansible.builtin.copy:
    src: wallpapers/
    dest: "{{ ansible_user_dir }}/.local/share/backgrounds/"
    mode: '0644'

- name: Set light mode wallpaper
  community.general.dconf:
    key: "/org/gnome/desktop/background/picture-uri"
    value: "'file://{{ ansible_user_dir }}/.local/share/backgrounds/light-mode-wallpaper.jpg'"

- name: Set dark mode wallpaper
  community.general.dconf:
    key: "/org/gnome/desktop/background/picture-uri-dark"
    value: "'file://{{ ansible_user_dir }}/.local/share/backgrounds/dark-mode-wallpaper.jpg'"


#######################################
#     Setting custom keybindings      #
#######################################

# Maximizing & minimizing windows

- name: Set keybinding toggle maximized
  community.general.dconf:
    key: "/org/gnome/desktop/wm/keybindings/toggle-maximized"
    value: "['<Super>m']"
    state: present


# Switching windows

- name: Set keybinding switch windows
  community.general.dconf:
    key: "/org/gnome/desktop/wm/keybindings/switch-windows"
    value: "['<Alt>Tab']"
    state: present

- name: Set keybinding switch windows backward
  community.general.dconf:
    key: "/org/gnome/desktop/wm/keybindings/switch-windows-backward"
    value: "['<Shift><Alt>Tab']"
    state: present


# Switching workspaces

- name: Set keybinding switch to workspace right
  community.general.dconf:
    key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-right"
    value: "['<Primary><Super>Right']"
    state: present

- name: Set keybinding switch to workspace left
  community.general.dconf:
    key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-left"
    value: "['<Primary><Super>Left']"
    state: present

- name: Set home folder keybinding
  community.general.dconf:
    key: "/org/gnome/settings-daemon/plugins/media-keys/home"
    value: "['<Super>e']"
    state: present

- name: Set lockscreen keybinding
  community.general.dconf:
    key: "/org/gnome/settings-daemon/plugins/media-keys/screensaver"
    value: "['<Super>l']"
    state: present


# Enable edge tiling

- name: Disable edge tiling
  community.general.dconf:
    key: "/org/gnome/mutter/edge-tiling"
    value: "false"
    state: present

# Removing conflicting keybindings

- name: Disable mutter tiling right
  community.general.dconf:
    key: "/org/gnome/mutter/keybindings/toggle-tiled-right"
    value: "['<Primary><Super>l']"
    state: present

- name: Disable mutter tiling left
  community.general.dconf:
    key: "/org/gnome/mutter/keybindings/toggle-tiled-left"
    value: "['<Primary><Super>h']"
    state: present

- name: Disable ibus emoji picker
  community.general.dconf:
    key: "/desktop/ibus/panel/emoji/hotkey"
    value: "['']"
    state: present

- name: Disable email client keybinding
  community.general.dconf:
    key: "/org/gnome/settings-daemon/plugins/media-keys/email"
    value: "['']"
    state: present

- name: Disable help menu keybinding
  community.general.dconf:
    key: "/org/gnome/settings-daemon/plugins/media-keys/help"
    value: "['']"
    state: present

- name: Disable idle screen dimming
  community.general.dconf:
    key: "/org/gnome/settings-daemon/plugins/power/idle-dim"
    value: "false"
    state: present

- name: Set screenshot keybinding
  community.general.dconf:
    key: "/org/gnome/shell/keybindings/screenshot"
    value: "['<Shift>Print', 'Print']"
    state: present

- name: Set screenshot UI keybinding
  community.general.dconf:
    key: "/org/gnome/shell/keybindings/show-screenshot-ui"
    value: "['<Shift><Super>s']"
    state: present

- name: Set overview keybinding
  community.general.dconf:
    key: "/org/gnome/shell/keybindings/toggle-overview"
    value: "['<Super>d', '<Super>Tab']"
    state: present


##########################################
#    Disabling middle-click to paste     #
#                on Xorg                 #
##########################################

# The following executable was compiled from the code available at
# https://github.com/milaq/XMousePasteBlock

- name: Copy xmousepasteblock executable to remote bin path
  become: true
  ansible.builtin.copy:
    src: "{{ set_configuration_xmousepasteblock_executable }}"
    dest: "/usr/bin/"
    mode: '0755'

- name: Copy xmousepasteblock autostart entry
  ansible.builtin.copy:
    src: "{{ set_configuration_xmousepasteblock_autostart_entry }}"
    dest: "{{ ansible_user_dir }}/.config/autostart/"
    mode: '0644'


##########################################
#            Configure tmux              #
##########################################

- name: Copy tmux config file
  ansible.builtin.copy:
    src: "{{ set_configuration_tmux_config }}"
    dest: "{{ ansible_user_dir }}"
    mode: '0664'

- name: Setup tmux plugin manager
  ansible.builtin.git:
    repo: "https://github.com/tmux-plugins/tpm"
    dest: "{{ ansible_user_dir }}/.tmux/plugins/tpm"

##########################################
#         Configure virt-manager         #
##########################################

- name: Enable virt-manager system tray icon
  community.general.dconf:
    key: "/org/virt-manager/virt-manager/confirm/unapplied-dev/system-tray"
    value: "true"
    state: present

- name: Set virt-manager default firmware to UEFI
  community.general.dconf:
    key: "/org/virt-manager/virt-manager/new-vm/firmware"
    value: "uefi"
    state: present

- name: Enable virt-manager memory polling
  community.general.dconf:
    key: "/org/virt-manager/virt-manager/stats/enable-memory-polling"
    value: "true"
    state: present

- name: Enable virt-manager CPU usage summary
  community.general.dconf:
    key: "/org/virt-manager/virt-manager/vmlist-fields/host-cpu-usage"
    value: "true"
    state: present

- name: Enable virt-manager memory usage summary
  community.general.dconf:
    key: "/org/virt-manager/virt-manager/vmlist-fields/memory-usage"
    value: "true"
    state: present

##########################################
#      Enable systemd boot messages      #
##########################################

- name: Set kernelstub to show systemd boot messages
  become: true
  ansible.builtin.shell:
    cmd: kernelstub --delete-options "quiet systemd.show_status=false splash" && kernelstub --add-options "systemd.show_status=true"
  when:
    ansible_facts['cmdline']['quiet'] is defined or
    ansible_facts['cmdline']['splash'] is defined or
    (ansible_facts['cmdline']['systemd.show_status'] == "false")
  changed_when:
    ansible_facts['cmdline']['quiet'] is defined or
    ansible_facts['cmdline']['splash'] is defined or
    (ansible_facts['cmdline']['systemd.show_status'] == "false")
